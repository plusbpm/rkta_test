{"version":3,"sources":["../../src/Atom/Atom.tsx"],"names":["Atom","atomRef","children","css","element","Element","rest","defaultProps"],"mappings":";;;;;;;AAEA;;;;;;;;AAcA,IAAMA,IAAgB,GAAG,SAAnBA,IAAmB;AAAA,MACvBC,OADuB,QACvBA,OADuB;AAAA,MAEvBC,QAFuB,QAEvBA,QAFuB;AAAA,MAGvBC,GAHuB,QAGvBA,GAHuB;AAAA,0BAIvBC,OAJuB;AAAA,MAIdC,OAJc,6BAIJ,KAJI;AAAA,MAKpBC,IALoB;;AAAA,SAOvB,eAAC,OAAD,eAAaA,IAAb;AAAmB,IAAA,GAAG,EAAEH,GAAxB;AAA6B,IAAA,GAAG,EAAEF;AAAlC,MACGC,QADH,CAPuB;AAAA,CAAzB;;AAYAF,IAAI,CAACO,YAAL,GAAoB;AAClBL,EAAAA,QAAQ,EAAE,IADQ;AAElBE,EAAAA,OAAO,EAAE;AAFS,CAApB;eAKeJ,I","sourcesContent":["/** @jsx jsx */\nimport { SFC, ReactNode, ElementType, ReactElement } from 'react';\nimport { jsx } from '@emotion/core';\n\nimport { CssEmotion, RktaThemed } from '../Provider/theme/theme.types';\n\nexport interface Props extends RktaThemed {\n  /** React ref object. */\n  atomRef?: object;\n  /** Css string, Css object, array or function. */\n  css?: CssEmotion;\n  children?: ReactNode;\n  /** React element or string. */\n  element?: ElementType;\n}\n\nconst Atom: SFC<Props> = ({\n  atomRef,\n  children,\n  css,\n  element: Element = 'div',\n  ...rest\n}: Props): ReactElement => (\n  <Element {...rest} css={css} ref={atomRef}>\n    {children}\n  </Element>\n);\n\nAtom.defaultProps = {\n  children: null,\n  element: 'div',\n};\n\nexport default Atom;\n"],"file":"Atom.js"}